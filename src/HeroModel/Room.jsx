/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 optimized-room.glb 
*/

import React, { useRef, useMemo } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { EffectComposer, SelectiveBloom } from "@react-three/postprocessing";
import { BlendFunction } from "postprocessing";
import * as THREE from "three";

export function Room(props) {
  const { nodes, materials } = useGLTF("/models/optimized-room.glb");
  const screensRef = useRef();
  const matcapTexture = useTexture("/images/textures/mat1.png");

  // Use useMemo to create materials only once
  const {
    curtainMaterial,
    bodyMaterial,
    tableMaterial,
    radiatorMaterial,
    compMaterial,
    pillowMaterial,
    chairMaterial
  } = useMemo(() => ({
    curtainMaterial: new THREE.MeshPhongMaterial({
      color: "#d90429",
    }),
    bodyMaterial: new THREE.MeshPhongMaterial({
      map: matcapTexture,
    }),
    tableMaterial: new THREE.MeshPhongMaterial({
      color: "#582f0e",
    }),
    radiatorMaterial: new THREE.MeshPhongMaterial({
      color: "#fff",
    }),
    compMaterial: new THREE.MeshStandardMaterial({
      color: "#fff",
    }),
    pillowMaterial: new THREE.MeshPhongMaterial({
      color: "#8338ec",
    }),
    chairMaterial: new THREE.MeshPhongMaterial({
      color: "#000",
    })
  }), [matcapTexture]);

  // Clone original geometries to prevent buffer attribute issues
  const clonedGeometries = useMemo(() => {
    return {
      curtain: nodes._________6_blinn1_0.geometry.clone(),
      body: nodes.body1_blinn1_0.geometry.clone(),
      cabin: nodes.cabin_blinn1_0.geometry.clone(),
      chairBody: nodes.chair_body_blinn1_0.geometry.clone(),
      comp: nodes.comp_blinn1_0.geometry.clone(),
      emis: nodes.emis_lambert1_0.geometry.clone(),
      handls: nodes.handls_blinn1_0.geometry.clone(),
      keyboard: nodes.keyboard_blinn1_0.geometry.clone(),
      kovrik: nodes.kovrik_blinn1_0.geometry.clone(),
      lampBl: nodes.lamp_bl_blinn1_0.geometry.clone(),
      lampWhite: nodes.lamp_white_blinn1_0.geometry.clone(),
      miuse: nodes.miuse_blinn1_0.geometry.clone(),
      monitor2: nodes.monitor2_blinn1_0.geometry.clone(),
      monitor3: nodes.monitor3_blinn1_0.geometry.clone(),
      pCylinder5: nodes.pCylinder5_blinn1_0.geometry.clone(),
      pillows: nodes.pillows_blinn1_0.geometry.clone(),
      polySurface53: nodes.polySurface53_blinn1_0.geometry.clone(),
      radiator: nodes.radiator_blinn1_0.geometry.clone(),
      radiator2: nodes.radiator_blinn1_0001.geometry.clone(),
      railing: nodes.railing_blinn1_0.geometry.clone(),
      redBttns: nodes.red_bttns_blinn1_0.geometry.clone(),
      redVac: nodes.red_vac_blinn1_0.geometry.clone(),
      stylus: nodes.stylus_blinn1_0.geometry.clone(),
      table: nodes.table_blinn1_0.geometry.clone(),
      tablet: nodes.tablet_blinn1_0.geometry.clone(),
      triangle: nodes.triangle_blinn1_0.geometry.clone(),
      vacBlack: nodes.vac_black_blinn1_0.geometry.clone(),
      vacuum1: nodes.vacuum1_blinn1_0.geometry.clone(),
      vacuumgrey: nodes.vacuumgrey_blinn1_0.geometry.clone(),
      vires: nodes.vires_blinn1_0.geometry.clone(),
      window: nodes.window_blinn1_0.geometry.clone(),
      window4: nodes.window4_phong1_0.geometry.clone()
    };
  }, [nodes]);

  return (
    <group {...props} dispose={null}>
      <EffectComposer>
        {/* Uncomment if you want to use the bloom effect */}
        {/* <SelectiveBloom
          selection={screensRef}
          intensity={1.5} 
          luminanceThreshold={0.2} 
          luminanceSmoothing={0.9} 
          blendFunction={BlendFunction.ADD} 
        /> */}
      </EffectComposer>
      
      <mesh geometry={clonedGeometries.curtain} material={curtainMaterial} />
      <mesh geometry={clonedGeometries.body} material={bodyMaterial} />
      <mesh geometry={clonedGeometries.cabin} material={tableMaterial} />
      <mesh geometry={clonedGeometries.chairBody} material={chairMaterial} />
      <mesh geometry={clonedGeometries.comp} material={compMaterial} />
      <mesh ref={screensRef} geometry={clonedGeometries.emis} material={materials.lambert1} />
      <mesh geometry={clonedGeometries.handls} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.keyboard} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.kovrik} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.lampBl} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.lampWhite} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.miuse} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.monitor2} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.monitor3} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.pCylinder5} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.pillows} material={pillowMaterial} />
      <mesh geometry={clonedGeometries.polySurface53} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.radiator} material={radiatorMaterial} />
      <mesh geometry={clonedGeometries.radiator2} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.railing} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.redBttns} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.redVac} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.stylus} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.table} material={tableMaterial} />
      <mesh geometry={clonedGeometries.tablet} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.triangle} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.vacBlack} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.vacuum1} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.vacuumgrey} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.vires} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.window} material={materials.blinn1} />
      <mesh geometry={clonedGeometries.window4} material={materials.phong1} />
    </group>
  );
}

useGLTF.preload("/models/optimized-room.glb");